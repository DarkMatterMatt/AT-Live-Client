{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ts/Api.ts","webpack:///./src/ts/Render.ts","webpack:///./src/ts/Route.ts","webpack:///./src/ts/Search.ts","webpack:///./src/ts/State.ts","webpack:///./src/ts/VehicleMarker.ts","webpack:///./src/ts/index.ts"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA,oDAAoD,KAAK,EAAE,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB;AAC7D,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACe,wEAAS,EAAC;;;;;;;;;;;;;ACnFzB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAA4D,iCAAiC;AAC5G;AACA;AACA,qCAAqC,MAAM,YAAY,QAAQ;AAC/D,qCAAqC,QAAQ,YAAY,cAAc;AACvE,uCAAuC,SAAS,YAAY,WAAW;AACvE;AACA;AACA;AACA,qCAAqC,OAAO,yBAAyB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,qEAAM,EAAC;;;;;;;;;;;;;AC9HtB;AAAA;AAAA;AAAA;AAA4C;AACpB;AACM;AAC9B;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAAM,mBAAmB,gBAAgB;AACxD;AACA,iBAAiB,gDAAgD;AACjE;AACA;AACA,yBAAyB,sDAAa,EAAE,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAG;AACX,gBAAgB,sBAAsB,GAAG,WAAW;AACpD,YAAY,4CAAG;AACf,YAAY,4CAAG;AACf;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA,sCAAsC,gDAAgD;AACtF,sCAAsC,gDAAgD;AACtF,sCAAsC,6EAA6E;AACnH,sCAAsC,6EAA6E;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4CAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,oEAAK,EAAC;;;;;;;;;;;;;ACvFrB;AAAA;AAAA;AAAwB;AACM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,+BAA+B,4CAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,+CAAM;AACd;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACe,qEAAM,EAAC;;;;;;;;;;;;;AC7FtB;AAAA;AAAA;AAA4B;AACE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA,8BAA8B,8CAAK;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qCAAqC,+CAAM,oBAAoB,YAAY;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA,wBAAwB,8CAAK;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,+CAAM,oBAAoB,YAAY;AACnE;AACA;AACA;AACA;AACA;AACe,oEAAK,EAAC;;;;;;;;;;;;;ACjGrB;AAAA;AACA;AACe,4EAAa,EAAC;;;;;;;;;;;;;ACF7B;AAAA;AAAA;AAAA;AAA4B;AACJ;AACM;AAC9B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4CAAG;AACb,sBAAsB,8CAAK;AAC3B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mEAAmE,kDAAkD;AACrH,uBAAuB,+CAAM;AAC7B;AACA,IAAI,4CAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ts/index.ts\");\n","const API_URL = \"https://mattm.win/atlive/api/v1/\";\r\nconst WS_URL = \"wss://mattm.win/atlive/api/v1/websocket\";\r\nclass Api {\r\n    constructor() {\r\n        this.ws = null;\r\n        this.apiUrl = API_URL;\r\n        this.wsUrl = WS_URL;\r\n        this.subscriptions = new Set();\r\n        this._onMessage = null;\r\n        this.promiseWsConnect = new Promise(resolve => {\r\n            this.resolveWhenWsConnect = resolve;\r\n        });\r\n    }\r\n    async query(path, params) {\r\n        const queryStr = `?${new URLSearchParams(params)}`;\r\n        const response = await fetch(this.apiUrl + path + queryStr).then(r => r.json());\r\n        if (response.status !== \"success\") {\r\n            throw new Error(`Failed querying API: ${path}${queryStr}`);\r\n        }\r\n        return response;\r\n    }\r\n    async queryRoutes(shortNames, fetch) {\r\n        const query = {};\r\n        if (shortNames)\r\n            query.shortNames = shortNames.join(\",\");\r\n        if (fetch)\r\n            query.fetch = fetch.join(\",\");\r\n        return await this.query(\"routes\", query);\r\n    }\r\n    async queryRoute(shortName, fetch) {\r\n        const query = { shortNames: shortName };\r\n        if (fetch)\r\n            query.fetch = fetch.join(\",\");\r\n        const response = await this.query(\"routes\", query);\r\n        return response.routes[shortName];\r\n    }\r\n    wsConnect() {\r\n        this.ws = new WebSocket(this.wsUrl);\r\n        let wsHeartbeatInterval;\r\n        this.ws.addEventListener(\"open\", () => {\r\n            this.resolveWhenWsConnect();\r\n            for (const shortName of this.subscriptions.values()) {\r\n                this.subscribe(shortName);\r\n            }\r\n            wsHeartbeatInterval = setInterval(() => {\r\n                this.ws.send(JSON.stringify({ route: \"ping\" }));\r\n            }, 5000);\r\n        });\r\n        this.ws.addEventListener(\"close\", ev => {\r\n            if (!ev.wasClean) {\r\n                console.warn(\"WebSocket closed\", ev);\r\n            }\r\n            clearInterval(wsHeartbeatInterval);\r\n            setTimeout(() => this.wsConnect(), 500);\r\n        });\r\n        this.ws.addEventListener(\"message\", ev => {\r\n            const data = JSON.parse(ev.data);\r\n            if (this._onMessage === null)\r\n                return;\r\n            if (!data.status || !data.route)\r\n                return;\r\n            this._onMessage(data);\r\n        });\r\n        return this.promiseWsConnect;\r\n    }\r\n    subscribe(shortName) {\r\n        this.subscriptions.add(shortName);\r\n        this.ws.send(JSON.stringify({\r\n            route: \"subscribe\",\r\n            shortName,\r\n        }));\r\n    }\r\n    unsubscribe(shortName) {\r\n        this.subscriptions.delete(shortName);\r\n        this.ws.send(JSON.stringify({\r\n            route: \"unsubscribe\",\r\n            shortName,\r\n        }));\r\n    }\r\n    onMessage(listener) {\r\n        this._onMessage = listener;\r\n    }\r\n}\r\nexport default new Api();\r\n","const MAX_FILTER_RESULTS = 20;\r\nconst SUGGESTED_COLORS = [\r\n    \"#E94537\",\r\n    \"#E67C13\",\r\n    \"#CECE1D\",\r\n    \"#1DCE1D\",\r\n    \"#5555FF\",\r\n    \"#9400D3\",\r\n    \"#D30094\",\r\n];\r\nclass Render {\r\n    static createMarkerIcon(options) {\r\n        const defaults = {\r\n            opacity: 1,\r\n            border: \"#FFF\",\r\n            borderOpacity: 1,\r\n            dotOpacity: 0.7,\r\n        };\r\n        const { fill, opacity, border, borderOpacity, dotFill, dotOpacity } = Object.assign(Object.assign({}, defaults), options);\r\n        const svg = `\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 57.96 90\">\n                <path style=\"fill: ${fill}; opacity: ${opacity}\" d=\"M29,89c-1.28,0-2.81-.64-2.9-3.67C25.75,74.12,20,65.18,13.92,55.73l-.14-.23c-.94-1.45-1.9-2.89-2.86-4.33C8.58,47.64,6.15,44,4.11,40.2a25.74,25.74,0,0,1,.57-25.53A28.11,28.11,0,0,1,29,1a28.09,28.09,0,0,1,24.3,13.67,25.74,25.74,0,0,1,.57,25.53c-2,3.79-4.46,7.44-6.81,11-1,1.44-1.92,2.88-2.85,4.33l-.14.23C38,65.18,32.2,74.12,31.88,85.33,31.8,88.36,30.26,89,29,89Z\" />\n                <path style=\"fill: ${border}; opacity: ${borderOpacity}\" d=\"M29,2c20.09.12,33.22,20.53,24,37.73C50.13,45,46.59,49.91,43.34,55c-6,9.4-12.13,18.76-12.45,30.34,0,1.24-.31,2.7-1.9,2.7h0c-1.59,0-1.86-1.46-1.9-2.7C26.74,73.72,20.66,64.36,14.62,55,11.36,49.91,7.82,45,5,39.73-4.25,22.53,8.88,2.12,29,2m0-2h0A29.11,29.11,0,0,0,3.82,14.16a26.74,26.74,0,0,0-.59,26.52c2.06,3.83,4.5,7.5,6.86,11C11,53.14,12,54.6,12.93,56.05l.15.22c6,9.34,11.68,18.16,12,29.08.12,4.31,3,4.65,3.9,4.65s3.79-.34,3.91-4.65c.31-10.92,6-19.74,12-29.08l.14-.22c.93-1.45,1.9-2.91,2.84-4.32,2.36-3.55,4.8-7.22,6.86-11a26.74,26.74,0,0,0-.59-26.52A29.08,29.08,0,0,0,29,0Z\" />\n                <circle style=\"fill: ${dotFill}; opacity: ${dotOpacity}\" cx=\"28.98\" cy=\"29\" r=\"9.5\" />\n            </svg>\n        `;\r\n        return {\r\n            url: `data:image/svg+xml;utf8,${svg.replace(/#/g, \"%23\")}`,\r\n            scaledSize: new google.maps.Size(27, 43),\r\n        };\r\n    }\r\n    static createActiveRoute(routeData, color, showPickr, onColorChange, onRemove) {\r\n        if (routeData.$activeRoute) {\r\n            return routeData.$activeRoute;\r\n        }\r\n        const $parent = document.createElement(\"div\");\r\n        $parent.classList.add(\"active-route\");\r\n        $parent.style.setProperty(\"--color\", color);\r\n        const $shortName = document.createElement(\"div\");\r\n        $shortName.classList.add(\"short\");\r\n        $shortName.classList.add(\"name\");\r\n        $shortName.append(document.createTextNode(routeData.shortName));\r\n        $parent.append($shortName);\r\n        const $pickr = document.createElement(\"span\");\r\n        $pickr.classList.add(\"pickr\");\r\n        $pickr.classList.add(\"btn\");\r\n        $parent.append($pickr);\r\n        const $remove = document.createElement(\"div\");\r\n        $remove.classList.add(\"remove\");\r\n        $remove.classList.add(\"btn\");\r\n        $parent.append($remove);\r\n        const $img = document.createElement(\"img\");\r\n        $img.src = \"images/remove.svg\";\r\n        $img.alt = \"Remove route\";\r\n        $remove.append($img);\r\n        const pickr = Pickr\r\n            .create({\r\n            el: $pickr,\r\n            theme: \"monolith\",\r\n            lockOpacity: true,\r\n            useAsButton: true,\r\n            default: color,\r\n            swatches: SUGGESTED_COLORS,\r\n            components: {\r\n                preview: true,\r\n                hue: true,\r\n                interaction: {\r\n                    input: true,\r\n                    save: true,\r\n                },\r\n            },\r\n        })\r\n            .on(\"save\", (newColor) => {\r\n            pickr.hide();\r\n            const newColorStr = newColor.toHEXA().toString();\r\n            $parent.style.setProperty(\"--color\", newColorStr);\r\n            onColorChange(routeData, newColorStr);\r\n        });\r\n        if (showPickr) {\r\n            setTimeout(() => pickr.show(), 0);\r\n        }\r\n        $remove.addEventListener(\"click\", () => {\r\n            pickr.destroyAndRemove();\r\n            onRemove(routeData);\r\n        });\r\n        routeData.$activeRoute = $parent;\r\n        return $parent;\r\n    }\r\n    static createSearchResult(routeData, onAdd) {\r\n        if (routeData.$searchResult) {\r\n            return routeData.$searchResult;\r\n        }\r\n        const $parent = document.createElement(\"div\");\r\n        $parent.classList.add(\"filter-result\");\r\n        $parent.classList.add(\"btn\");\r\n        const $img = document.createElement(\"img\");\r\n        $img.classList.add(\"hide-0-899\");\r\n        $img.src = `images/${routeData.type}-filled.svg`;\r\n        $img.alt = routeData.type;\r\n        $parent.append($img);\r\n        const $shortName = document.createElement(\"span\");\r\n        $shortName.classList.add(\"short\");\r\n        $shortName.classList.add(\"name\");\r\n        $shortName.append(document.createTextNode(routeData.shortName));\r\n        $parent.append($shortName);\r\n        const $longName = document.createElement(\"span\");\r\n        $longName.classList.add(\"long\");\r\n        $longName.classList.add(\"name\");\r\n        $longName.append(document.createTextNode(routeData.longName));\r\n        $parent.append($longName);\r\n        $parent.addEventListener(\"click\", () => onAdd(routeData));\r\n        routeData.$searchResult = $parent;\r\n        return $parent;\r\n    }\r\n    static renderFilterDropdown($dropdown, routes, onAdd) {\r\n        $dropdown.innerHTML = \"\";\r\n        if (routes.length === 0) {\r\n            $dropdown.classList.remove(\"show\");\r\n            return;\r\n        }\r\n        $dropdown.classList.add(\"show\");\r\n        for (const route of routes.slice(0, MAX_FILTER_RESULTS)) {\r\n            $dropdown.append(Render.createSearchResult(route, onAdd));\r\n        }\r\n    }\r\n}\r\nexport default Render;\r\n","import VehicleMarker from \"./VehicleMarker\";\r\nimport Api from \"./Api\";\r\nimport Render from \"./Render\";\r\nclass Route {\r\n    constructor({ map, type, color, shortName }) {\r\n        this.map = map;\r\n        this.type = type;\r\n        this.color = color;\r\n        this.shortName = shortName;\r\n        this.active = false;\r\n        this.longName = null;\r\n        this.polylines = null;\r\n        this.vehicleMarkers = new Map();\r\n    }\r\n    generateMarkerIcon(directionId, colorOverride) {\r\n        const fill = colorOverride || this.color;\r\n        const dotFill = directionId === 0 ? \"#000\" : \"#FFF\";\r\n        return Render.createMarkerIcon({ fill, dotFill });\r\n    }\r\n    showVehicle({ vehicleId, position, lastUpdated, directionId }) {\r\n        let marker = this.vehicleMarkers.get(vehicleId);\r\n        if (marker === undefined) {\r\n            marker = new VehicleMarker({ map: this.map });\r\n            this.vehicleMarkers.set(vehicleId, marker);\r\n            marker.interval = setInterval(() => {\r\n                const now = Math.floor((new Date()).getTime() / 1000);\r\n                if (marker.lastUpdated < now - 90) {\r\n                    marker.setMap(null);\r\n                    clearInterval(marker.interval);\r\n                    this.vehicleMarkers.delete(vehicleId);\r\n                }\r\n                else if (marker.lastUpdated < now - 30) {\r\n                    marker.setIcon(this.generateMarkerIcon(directionId, \"gray\"));\r\n                }\r\n            }, 1000 + Math.floor(Math.random() * 200));\r\n        }\r\n        marker.setPosition(position);\r\n        marker.setIcon(this.generateMarkerIcon(directionId));\r\n        marker.lastUpdated = lastUpdated;\r\n        marker.directionId = directionId;\r\n    }\r\n    setColor(color) {\r\n        this.color = color;\r\n        if (this.polylines) {\r\n            this.polylines[2].setOptions({ strokeColor: color });\r\n            this.polylines[3].setOptions({ strokeColor: color });\r\n        }\r\n        for (const m of this.vehicleMarkers.values()) {\r\n            m.setIcon(this.generateMarkerIcon(m.directionId));\r\n        }\r\n    }\r\n    async activate() {\r\n        if (this.active) {\r\n            return;\r\n        }\r\n        this.active = true;\r\n        Api.subscribe(this.shortName);\r\n        const [{ longName, polylines }, { vehicles },] = await Promise.all([\r\n            Api.queryRoute(this.shortName, [\"longName\", \"polylines\"]),\r\n            Api.queryRoute(this.shortName, [\"vehicles\"]),\r\n        ]);\r\n        this.longName = longName;\r\n        const { map } = this;\r\n        const strokeOpacity = 0.7;\r\n        this.polylines = [\r\n            new google.maps.Polyline({ map, path: polylines[0], strokeColor: \"black\" }),\r\n            new google.maps.Polyline({ map, path: polylines[1], strokeColor: \"white\" }),\r\n            new google.maps.Polyline({ map, path: polylines[0], strokeColor: this.color, strokeOpacity, zIndex: 1 }),\r\n            new google.maps.Polyline({ map, path: polylines[1], strokeColor: this.color, strokeOpacity, zIndex: 2 }),\r\n        ];\r\n        Object.values(vehicles).map(v => this.showVehicle(v));\r\n    }\r\n    deactivate() {\r\n        if (!this.active) {\r\n            return;\r\n        }\r\n        this.active = false;\r\n        Api.unsubscribe(this.shortName);\r\n        for (const polyline of this.polylines) {\r\n            polyline.setMap(null);\r\n            this.polylines = [];\r\n        }\r\n        for (const marker of this.vehicleMarkers.values()) {\r\n            marker.setMap(null);\r\n        }\r\n    }\r\n}\r\nexport default Route;\r\n","import Api from \"./Api\";\r\nimport Render from \"./Render\";\r\nclass Search {\r\n    constructor(state, $search, $dropdown) {\r\n        this.state = state;\r\n        this.$search = $search;\r\n        this.$dropdown = $dropdown;\r\n        $search.addEventListener(\"keyup\", ev => {\r\n            if (ev.key === \"Escape\") {\r\n                $search.value = \"\";\r\n                this.hideDropdown();\r\n                return;\r\n            }\r\n            if (ev.key === \"Enter\") {\r\n                $dropdown.firstChild.click();\r\n                return;\r\n            }\r\n            this.search($search.value);\r\n        });\r\n    }\r\n    async load() {\r\n        const response = await Api.queryRoutes(null, [\"shortName\", \"longName\", \"type\"]);\r\n        const routes = Object.values(response.routes);\r\n        const regexWord = /[a-z]+/g;\r\n        for (const route of routes) {\r\n            route.shortNameLower = route.shortName.toLowerCase();\r\n            route.longNameLower = route.longName.toLowerCase();\r\n            route.longNameWords = [];\r\n            let m;\r\n            do {\r\n                m = regexWord.exec(route.longNameLower);\r\n                if (m && ![\"to\", \"via\"].includes(m[0])) {\r\n                    route.longNameWords.push(m[0]);\r\n                }\r\n            } while (m);\r\n        }\r\n        const regexTwoDigits = /^\\d\\d\\D?$/;\r\n        routes.sort((a, b) => {\r\n            const aInt = Number.parseInt(a.shortName, 10);\r\n            const bInt = Number.parseInt(b.shortName, 10);\r\n            if (aInt && bInt) {\r\n                const aTwoDigits = regexTwoDigits.test(a.shortName);\r\n                const bTwoDigits = regexTwoDigits.test(b.shortName);\r\n                if (aTwoDigits !== bTwoDigits) {\r\n                    return Number(bTwoDigits) - Number(aTwoDigits);\r\n                }\r\n                return aInt - bInt;\r\n            }\r\n            return a.shortName < b.shortName ? -1 : 1;\r\n        });\r\n        this.routes = routes;\r\n    }\r\n    render(routes) {\r\n        Render.renderFilterDropdown(this.$dropdown, routes, routeData => {\r\n            this.$search.value = \"\";\r\n            this.state.activateRoute(routeData);\r\n        });\r\n    }\r\n    hideDropdown() {\r\n        this.render([]);\r\n    }\r\n    search(query_) {\r\n        const query = query_.toLowerCase();\r\n        if (query === \"\") {\r\n            this.hideDropdown();\r\n            return;\r\n        }\r\n        this.routes.forEach(r => {\r\n            let filterWeight = 0;\r\n            if (r.shortNameLower === query) {\r\n                filterWeight += 50;\r\n            }\r\n            else if (r.shortNameLower.startsWith(query)) {\r\n                filterWeight += 25;\r\n            }\r\n            if (r.longNameLower.includes(query)) {\r\n                filterWeight += 5;\r\n            }\r\n            r.longNameWords.forEach(word => {\r\n                if (word.startsWith(query)) {\r\n                    filterWeight += 5;\r\n                }\r\n                else if (word.includes(query)) {\r\n                    filterWeight += 1;\r\n                }\r\n            });\r\n            r.filterWeight = filterWeight;\r\n        });\r\n        const filtered = this.routes.filter(r => r.filterWeight && !this.state.isActive(r));\r\n        filtered.sort((a, b) => b.filterWeight - a.filterWeight);\r\n        this.render(filtered);\r\n    }\r\n}\r\nexport default Search;\r\n","import Route from \"./Route\";\r\nimport Render from \"./Render\";\r\nconst STATE_VERSION = 1;\r\nclass State {\r\n    constructor(map, $addRoute) {\r\n        this.map = map;\r\n        this.$addRoute = $addRoute;\r\n        this.load();\r\n    }\r\n    static migrate(data) {\r\n        data.version = STATE_VERSION;\r\n        return data;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            version: this.version,\r\n            routes: [...this.routesByShortName.values()].map(r => [r.type, r.shortName, r.active, r.color]),\r\n        };\r\n    }\r\n    save() {\r\n        localStorage.setItem(\"state\", JSON.stringify(this));\r\n    }\r\n    load() {\r\n        let data = {\r\n            version: STATE_VERSION,\r\n            routes: [],\r\n        };\r\n        const dataStr = localStorage.getItem(\"state\");\r\n        if (dataStr !== null) {\r\n            data = State.migrate(Object.assign(Object.assign({}, data), JSON.parse(dataStr)));\r\n        }\r\n        this.version = data.version;\r\n        this.routesByShortName = new Map();\r\n        for (const [type, shortName, active, color] of data.routes) {\r\n            const route = new Route({\r\n                shortName,\r\n                color,\r\n                type,\r\n                map: this.map,\r\n            });\r\n            this.routesByShortName.set(shortName, route);\r\n            if (active) {\r\n                const $activeRoute = Render.createActiveRoute({ shortName }, route.color, false, this.changeRouteColor.bind(this), this.deactivateRoute.bind(this));\r\n                this.$addRoute.parentNode.insertBefore($activeRoute, this.$addRoute);\r\n                route.activate();\r\n            }\r\n        }\r\n    }\r\n    getNewColor() {\r\n        return \"#E94537\";\r\n    }\r\n    isActive({ shortName }) {\r\n        const route = this.routesByShortName.get(shortName);\r\n        return route ? route.active : false;\r\n    }\r\n    showVehicle(data) {\r\n        const route = this.routesByShortName.get(data.shortName);\r\n        if (route === undefined) {\r\n            console.log(\"Skipping vehicle update because the route does not exist\", data);\r\n            return;\r\n        }\r\n        route.showVehicle(data);\r\n    }\r\n    changeRouteColor({ shortName }, color) {\r\n        const route = this.routesByShortName.get(shortName);\r\n        if (route) {\r\n            route.setColor(color);\r\n        }\r\n        this.save();\r\n    }\r\n    deactivateRoute({ shortName, $activeRoute }) {\r\n        const route = this.routesByShortName.get(shortName);\r\n        if (route !== undefined) {\r\n            route.deactivate();\r\n        }\r\n        $activeRoute.remove();\r\n        this.save();\r\n    }\r\n    async activateRoute({ shortName, type }) {\r\n        let route = this.routesByShortName.get(shortName);\r\n        let showPickr = false;\r\n        if (route === undefined) {\r\n            showPickr = true;\r\n            route = new Route({\r\n                shortName,\r\n                type,\r\n                color: this.getNewColor(),\r\n                map: this.map,\r\n            });\r\n            this.routesByShortName.set(shortName, route);\r\n        }\r\n        const $activeRoute = Render.createActiveRoute({ shortName }, route.color, showPickr, this.changeRouteColor.bind(this), this.deactivateRoute.bind(this));\r\n        this.$addRoute.parentNode.insertBefore($activeRoute, this.$addRoute);\r\n        await route.activate();\r\n        this.save();\r\n    }\r\n}\r\nexport default State;\r\n","class VehicleMarker extends google.maps.Marker {\r\n}\r\nexport default VehicleMarker;\r\n","import State from \"./State\";\r\nimport Api from \"./Api\";\r\nimport Search from \"./Search\";\r\nconst AUCKLAND_COORDS = { lat: -36.848461, lng: 174.763336 };\r\nconst $map = document.getElementById(\"map\");\r\nconst $openMenu = document.getElementById(\"open-menu\");\r\nconst $menu = document.getElementById(\"menu\");\r\nconst $closeMenu = $menu.getElementsByClassName(\"close\")[0];\r\nconst $addRoute = document.getElementById(\"add-route\");\r\nconst $searchBtn = $addRoute.getElementsByClassName(\"btn\")[0];\r\nconst $searchInput = $addRoute.getElementsByTagName(\"input\")[0];\r\nconst $dropdownFilter = document.getElementById(\"dropdown-filter\");\r\nconst $help = document.getElementById(\"help\");\r\nconst $helpBtn = $help.getElementsByClassName(\"btn\")[0];\r\nfunction largeScreen() {\r\n    return window.matchMedia(\"(min-width: 900px)\").matches;\r\n}\r\nfunction isVisible($e) {\r\n    return Boolean($e && ($e.offsetWidth || $e.offsetHeight || $e.getClientRects().length));\r\n}\r\nfunction onClickOutside($e, cb) {\r\n    const outsideClickListener = (ev) => {\r\n        if (!$e.contains(ev.target) && isVisible($e)) {\r\n            removeClickListener();\r\n            cb(ev);\r\n        }\r\n    };\r\n    const removeClickListener = () => {\r\n        document.removeEventListener(\"click\", outsideClickListener);\r\n    };\r\n    document.addEventListener(\"click\", outsideClickListener);\r\n}\r\nfunction closeMenu() {\r\n    $menu.classList.remove(\"show\");\r\n}\r\nfunction openMenu() {\r\n    $menu.classList.add(\"show\");\r\n}\r\nfunction showHelp() {\r\n    $help.classList.add(\"show\");\r\n}\r\nfunction hideHelp() {\r\n    $help.classList.remove(\"show\");\r\n}\r\nfunction helpIsVisible() {\r\n    return $help.classList.contains(\"show\");\r\n}\r\nfunction closeAddRouteInput() {\r\n    $addRoute.classList.remove(\"show\");\r\n    if (largeScreen()) {\r\n        setTimeout(() => {\r\n            $searchInput.value = \"\";\r\n        }, 200);\r\n    }\r\n}\r\nfunction openAddRouteInput() {\r\n    $addRoute.classList.add(\"show\");\r\n    $searchInput.focus();\r\n}\r\n(async () => {\r\n    await Api.wsConnect();\r\n    const state = new State(new google.maps.Map($map, {\r\n        center: AUCKLAND_COORDS,\r\n        zoom: 13,\r\n        fullscreenControl: false,\r\n        streetViewControl: false,\r\n        mapTypeControl: false,\r\n    }), $addRoute);\r\n    navigator.geolocation.getCurrentPosition(r => state.map.panTo({ lat: r.coords.latitude, lng: r.coords.longitude }));\r\n    const search = new Search(state, $searchInput, $dropdownFilter);\r\n    search.load();\r\n    Api.onMessage((data) => {\r\n        if (data.status !== \"success\") {\r\n            console.error(data.route, data.message, data);\r\n            return;\r\n        }\r\n        if (data.route === \"subscribe\" || data.route === \"unsubscribe\") {\r\n            console.log(data.message);\r\n            return;\r\n        }\r\n        if (data.route === \"live/vehicle\") {\r\n            state.showVehicle(data);\r\n            return;\r\n        }\r\n        if (data.route === \"ping\") {\r\n            return;\r\n        }\r\n        console.log(data.route, data.message, data);\r\n    });\r\n    $openMenu.addEventListener(\"click\", openMenu);\r\n    $closeMenu.addEventListener(\"click\", closeMenu);\r\n    $addRoute.addEventListener(\"click\", ev => {\r\n        if (!$addRoute.classList.contains(\"show\")) {\r\n            openAddRouteInput();\r\n            onClickOutside($addRoute, () => {\r\n                closeAddRouteInput();\r\n                search.hideDropdown();\r\n            });\r\n        }\r\n        else if (ev.target === $searchBtn) {\r\n            closeAddRouteInput();\r\n            search.hideDropdown();\r\n        }\r\n    });\r\n    $helpBtn.addEventListener(\"click\", ev => {\r\n        if (!helpIsVisible()) {\r\n            showHelp();\r\n            onClickOutside($help, hideHelp);\r\n        }\r\n        else if (ev.target === $helpBtn) {\r\n            hideHelp();\r\n        }\r\n    });\r\n})();\r\n"],"sourceRoot":""}